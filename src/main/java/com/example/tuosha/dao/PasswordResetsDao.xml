<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="import com.example.tuosha.dao.PasswordResetsDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.tuosha.model.PasswordResetsEntity" id="passwordResetsMap">
        <result property="email" column="email"/>
        <result property="token" column="token"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>
    
  <sql id="Base_Column_List" > 
  	  	     email ,  	        
  	  	     token ,  	        
  	  	      created_at as createdAt    	        
  	  
  </sql>

	<select id="queryObject" resultType="com.example.tuosha.model.PasswordResetsEntity">
		select  <include refid="Base_Column_List" />  from password_resets where email = #{value}
	</select>

	<select id="queryList" resultType="com.example.tuosha.model.PasswordResetsEntity">
		select  <include refid="Base_Column_List" />  from password_resets
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by email desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from password_resets 
	</select>
	 
	<insert id="save" parameterType="com.example.tuosha.model.PasswordResetsEntity">
		insert into password_resets
		(
			`email`, 
			`token`, 
			`created_at`
		)
		values
		(
			#{email}, 
			#{token}, 
			#{createdAt}
		)
	</insert>
	 
	<update id="update" parameterType="com.example.tuosha.model.PasswordResetsEntity">
		update password_resets 
		<set>
			<if test="token != null">`token` = #{token}, </if>
			<if test="createdAt != null">`created_at` = #{createdAt}</if>
		</set>
		where email = #{email}
	</update>
	
	<delete id="delete">
		delete from password_resets where email = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from password_resets where email in 
		<foreach item="email" collection="array" open="(" separator="," close=")">
			#{email}
		</foreach>
	</delete>

</mapper>