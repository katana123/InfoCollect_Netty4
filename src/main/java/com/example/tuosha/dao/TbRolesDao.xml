<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.tuosha.dao.TbRolesDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.example.tuosha.model.TbRolesEntity" id="tbRolesMap">
        <result property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleRemark" column="role_remark"/>
    </resultMap>

    <sql id="Base_Column_List">
  	  	      role_id as roleId  ,  	        
  	  	      role_name as roleName  ,  	        
  	  	      role_remark as roleRemark    	        
  	  
  </sql>

    <select id="queryObject" resultType="com.example.tuosha.model.TbRolesEntity">
        select
        <include refid="Base_Column_List"/>
        from tb_roles where role_id = #{value}
    </select>

    <select id="queryList" resultType="com.example.tuosha.model.TbRolesEntity">
        select
        <include refid="Base_Column_List"/>
        from tb_roles
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by role_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
		select count(*) from tb_roles 
	</select>

    <insert id="save" parameterType="com.example.tuosha.model.TbRolesEntity" useGeneratedKeys="true"
            keyProperty="roleId">
		insert into tb_roles
		(
			`role_name`, 
			`role_remark`
		)
		values
		(
			#{roleName}, 
			#{roleRemark}
		)
	</insert>

    <update id="update" parameterType="com.example.tuosha.model.TbRolesEntity">
        update tb_roles
        <set>
            <if test="roleName != null">`role_name` = #{roleName},</if>
            <if test="roleRemark != null">`role_remark` = #{roleRemark}</if>
        </set>
        where role_id = #{roleId}
    </update>

    <delete id="delete">
		delete from tb_roles where role_id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from tb_roles where role_id in
        <foreach item="roleId" collection="array" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

</mapper>